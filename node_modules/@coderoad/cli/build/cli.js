"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.cli = void 0;
require("./utils/logs");
const build_1 = __importDefault(require("./build"));
const create_1 = __importDefault(require("./create"));
const validate_1 = __importDefault(require("./validate"));
const help = __importStar(require("./help"));
async function cli(rawArgs) {
    const command = rawArgs[2];
    const args = rawArgs.slice(3);
    switch (command) {
        case '--version':
        case '-v':
            const version = require('../package.json').version;
            console.log(`v${version}`);
            return;
        case 'build':
            if (args.length && ['--help', '-h'].includes(args[0])) {
                help.build();
                return;
            }
            build_1.default(args);
            break;
        case 'create':
            if (args.length && ['--help', '-h'].includes(args[0])) {
                help.create();
                return;
            }
            create_1.default(args);
            break;
        case 'validate':
            if (args.length && ['--help', '-h'].includes(args[0])) {
                help.validate();
                return;
            }
            validate_1.default(args);
            break;
        case '--help':
        case '-h':
        default:
            help.main();
    }
}
exports.cli = cli;
//# sourceMappingURL=cli.js.map